name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '20'

jobs:
  lint:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run ESLint (warnings tolerated)
        run: npm run lint -- --max-warnings=500
      - name: Type check
        run: npm run type-check

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run unit tests (only tests/unit)
        run: npx jest --testPathPattern '^tests/unit/' --passWithNoTests
      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  e2e:
    name: E2E Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Install Playwright
        run: npx playwright install --with-deps
      - name: Build
        run: npm run build
        env:
          NEXT_PUBLIC_SUPABASE_URL: https://example.supabase.co
          NEXT_PUBLIC_SUPABASE_ANON_KEY: dummy-anon-key
          SUPABASE_SERVICE_KEY: dummy-service-key
      - name: Start app
        run: |
          NEXT_DISABLE_SOURCEMAPS=1 NODE_OPTIONS="--max-old-space-size=2048" npm run start &
          for i in {1..60}; do
            curl -fsS http://localhost:3000/api/health && break
            sleep 1
          done
      - name: Run E2E tests (skip if no tests)
        run: |
          if npx playwright test --list | grep -qi "no tests found\|0 tests"; then
            echo "No E2E tests found. Skipping.";
            exit 0;
          fi
          npm run test:e2e
        env:
          BASE_URL: http://localhost:3000
          OPENAI_API_KEY: dummy-openai-key
          ANTHROPIC_API_KEY: dummy-anthropic-key
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Build application
        run: npm run build
        env:
          NEXT_PUBLIC_SUPABASE_URL: https://example.supabase.co
          NEXT_PUBLIC_SUPABASE_ANON_KEY: dummy-anon-key
          SUPABASE_SERVICE_KEY: dummy-service-key
          SKIP_ENV_VALIDATION: true
          OPENAI_API_KEY: dummy-openai-key
          ANTHROPIC_API_KEY: dummy-anthropic-key
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: .next/
          retention-days: 7

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run npm audit (non-blocking)
        run: npm audit --audit-level=high || true
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      - name: Upload Snyk results
        if: ${{ hashFiles('snyk.sarif') != '' }}
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk.sarif
