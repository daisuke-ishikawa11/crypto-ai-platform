# =============================================================================
# üåê NGINX CONFIGURATION FOR CRYPTO AI PLATFORM
# =============================================================================
# High-performance reverse proxy with load balancing, caching, and monitoring
# Optimized for Docker containers and production environments
# Includes SSL termination, rate limiting, and security headers
# =============================================================================

# Worker configuration for optimal performance
worker_processes auto;
worker_rlimit_nofile 65535;

# Error logging
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    # =============================================================================
    # üîß BASIC CONFIGURATION
    # =============================================================================
    
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    log_format json escape=json '{'
        '"timestamp":"$time_iso8601",'
        '"remote_addr":"$remote_addr",'
        '"method":"$request_method",'
        '"uri":"$request_uri",'
        '"status":$status,'
        '"bytes_sent":$bytes_sent,'
        '"request_time":$request_time,'
        '"upstream_response_time":"$upstream_response_time",'
        '"user_agent":"$http_user_agent",'
        '"referer":"$http_referer"'
    '}';
    
    access_log /var/log/nginx/access.log json;
    
    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # =============================================================================
    # üîí SECURITY CONFIGURATION
    # =============================================================================
    
    # Hide nginx version
    server_tokens off;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    
    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=3r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=100r/s;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=perip:10m;

    # =============================================================================
    # ‚ö° UPSTREAM CONFIGURATION
    # =============================================================================
    
    upstream crypto_ai_app {
        least_conn;
        server app:3000 max_fails=3 fail_timeout=30s weight=1;
        # Add more app instances for horizontal scaling
        # server app2:3000 max_fails=3 fail_timeout=30s weight=1;
        # server app3:3000 max_fails=3 fail_timeout=30s weight=1;
        keepalive 32;
    }

    # =============================================================================
    # üìä HEALTH CHECK SERVER
    # =============================================================================
    
    server {
        listen 8080;
        server_name localhost;
        
        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        location /nginx-status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.20.0.0/16;  # Docker network
            deny all;
        }
    }

    # =============================================================================
    # üåê MAIN SERVER CONFIGURATION
    # =============================================================================
    
    server {
        listen 80;
        server_name _;
        
        # Connection and rate limiting
        limit_conn perip 20;
        limit_req zone=general burst=20 nodelay;
        
        # Root directory (for static files if needed)
        root /var/www/html;
        index index.html;
        
        # =============================================================================
        # üîç MONITORING & HEALTH CHECKS
        # =============================================================================
        
        # Health check endpoint
        location /health {
            limit_req zone=general burst=50 nodelay;
            proxy_pass http://crypto_ai_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 60s;
            proxy_connect_timeout 10s;
        }
        
        # Metrics endpoint
        location /api/metrics {
            limit_req zone=api burst=10 nodelay;
            proxy_pass http://crypto_ai_app;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 30s;
            proxy_connect_timeout 10s;
        }
        
        # =============================================================================
        # üîê API ENDPOINTS WITH RATE LIMITING
        # =============================================================================
        
        # Authentication endpoints with strict rate limiting
        location /api/auth {
            limit_req zone=auth burst=5 nodelay;
            proxy_pass http://crypto_ai_app;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 60s;
            proxy_connect_timeout 10s;
        }
        
        # AI endpoints with moderate rate limiting
        location /api/ai {
            limit_req zone=api burst=15 nodelay;
            proxy_pass http://crypto_ai_app;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;\n            proxy_read_timeout 120s;  # AI requests may take longer\n            proxy_connect_timeout 10s;\n        }\n        \n        # General API endpoints\n        location /api/ {\n            limit_req zone=api burst=20 nodelay;\n            proxy_pass http://crypto_ai_app;\n            proxy_http_version 1.1;\n            proxy_set_header Host $host;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n            proxy_set_header X-Forwarded-Proto $scheme;\n            proxy_read_timeout 60s;\n            proxy_connect_timeout 10s;\n        }\n        \n        # =============================================================================\n        # üìÅ STATIC ASSETS WITH CACHING\n        # =============================================================================\n        \n        # Static assets with long-term caching\n        location ~* \\.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {\n            proxy_pass http://crypto_ai_app;\n            proxy_http_version 1.1;\n            proxy_set_header Host $host;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n            proxy_set_header X-Forwarded-Proto $scheme;\n            \n            # Caching\n            expires 1y;\n            add_header Cache-Control \"public, immutable\";\n            add_header Vary Accept-Encoding;\n            \n            # Gzip specific assets\n            gzip_static on;\n        }\n        \n        # Next.js static files\n        location /_next/static/ {\n            proxy_pass http://crypto_ai_app;\n            proxy_http_version 1.1;\n            proxy_set_header Host $host;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n            proxy_set_header X-Forwarded-Proto $scheme;\n            \n            # Long-term caching for Next.js static assets\n            expires 1y;\n            add_header Cache-Control \"public, immutable\";\n        }\n        \n        # =============================================================================\n        # üåü MAIN APPLICATION ROUTING\n        # =============================================================================\n        \n        # Default location for all other requests\n        location / {\n            limit_req zone=general burst=50 nodelay;\n            proxy_pass http://crypto_ai_app;\n            proxy_http_version 1.1;\n            proxy_set_header Upgrade $http_upgrade;\n            proxy_set_header Connection 'upgrade';\n            proxy_set_header Host $host;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n            proxy_set_header X-Forwarded-Proto $scheme;\n            proxy_cache_bypass $http_upgrade;\n            proxy_read_timeout 60s;\n            proxy_connect_timeout 10s;\n            \n            # Enable proxy buffering for better performance\n            proxy_buffering on;\n            proxy_buffer_size 8k;\n            proxy_buffers 8 8k;\n            proxy_busy_buffers_size 16k;\n        }\n        \n        # =============================================================================\n        # üö´ SECURITY & BLOCKING\n        # =============================================================================\n        \n        # Block common attack patterns\n        location ~ /\\. {\n            deny all;\n            access_log off;\n            log_not_found off;\n        }\n        \n        # Block sensitive files\n        location ~* \\.(env|log|ini|conf|bak|backup|old|tmp)$ {\n            deny all;\n            access_log off;\n        }\n        \n        # Custom error pages\n        error_page 404 /404.html;\n        error_page 500 502 503 504 /50x.html;\n        \n        location = /50x.html {\n            root /usr/share/nginx/html;\n        }\n    }\n    \n    # =============================================================================\n    # üîí HTTPS SERVER (SSL TERMINATION)\n    # =============================================================================\n    \n    # Uncomment and configure for HTTPS\n    # server {\n    #     listen 443 ssl http2;\n    #     server_name your-domain.com;\n    #     \n    #     ssl_certificate /etc/nginx/ssl/cert.pem;\n    #     ssl_certificate_key /etc/nginx/ssl/key.pem;\n    #     \n    #     # SSL configuration\n    #     ssl_protocols TLSv1.2 TLSv1.3;\n    #     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;\n    #     ssl_prefer_server_ciphers off;\n    #     ssl_session_timeout 1d;\n    #     ssl_session_cache shared:SSL:50m;\n    #     ssl_stapling on;\n    #     ssl_stapling_verify on;\n    #     \n    #     # Security headers for HTTPS\n    #     add_header Strict-Transport-Security \"max-age=63072000; includeSubDomains; preload\" always;\n    #     \n    #     # Same location blocks as HTTP server\n    #     # ...\n    # }\n    \n    # HTTP to HTTPS redirect\n    # server {\n    #     listen 80;\n    #     server_name your-domain.com;\n    #     return 301 https://$server_name$request_uri;\n    # }\n}\n\n# =============================================================================\n# üìä NGINX MONITORING & METRICS:\n# \n# Status endpoint: http://localhost:8080/nginx-status\n# Health check: http://localhost:8080/nginx-health\n# Access logs: /var/log/nginx/access.log (JSON format)\n# Error logs: /var/log/nginx/error.log\n# \n# Key Metrics Tracked:\n# - Request count and rate\n# - Response times (request_time, upstream_response_time)\n# - Status codes and error rates\n# - Connection counts\n# - Cache hit/miss ratios\n# \n# Rate Limiting:\n# - General: 100 req/s burst 20\n# - API: 10 req/s burst 20\n# - Auth: 3 req/s burst 5\n# - Health: 50 req/s burst 50\n# =============================================================================