import { Lesson } from '@/lib/types/learning';

export const lesson3: Lesson = {
  id: 'crypto-basics-3',
  categoryId: 'crypto-basics',
  title: 'How Blockchain Works - ブロックチェーンの仕組み',
  slug: 'how-blockchain-works',
  description: 'ブロックチェーン技術の基本構造、動作原理、なぜ革命的なのかを詳しく解説します。',
  difficultyLevel: 'beginner',
  estimatedMinutes: 20,
  orderIndex: 3,
  content: {
    sections: [
      {
        title: 'ブロックチェーンの基本構造',
        content: `
          **ブロックチェーンとは**
          
          ブロックチェーンは、取引データを「ブロック」という単位でまとめ、それらを暗号技術で「チェーン」状に連結した分散型台帳システムです。
          
          **ブロックの構成要素：**
          - **ハッシュ値**: ブロックの固有識別子(SHA-256)
          - **前のブロックのハッシュ**: チェーン構造を形成
          - **マークルルート**: ブロック内全取引のハッシュツリー
          - **タイムスタンプ**: ブロック生成時刻
          - **ナンス**: マイニングで使用される数値
          - **取引データ**: 実際の送金情報
          
          **チェーン構造の特徴：**
          - 各ブロックは前のブロックを参照
          - 一つでも改ざんすると全チェーンが無効
          - 最初のブロックは「ジェネシスブロック」
        `
      },
      {
        title: '分散型ネットワークの仕組み',
        content: `
          **中央集権 vs 分散型**
          
          **従来の中央集権システム：**
          - 単一の管理者が全てを制御
          - 単一障害点(SPOF)のリスク
          - 管理者への信頼が必要
          - 検閲·凍結のリスク
          
          **分散型ブロックチェーン：**
          - 世界中の数千のノードが同じデータを保持
          - どのノードが停止してもシステム継続
          - 信頼を技術的に保証
          - 検閲耐性を持つ
          
          **ノードの役割：**
          - **フルノード**: 全ブロックチェーンデータを保存·検証
          - **マイニングノード**: 新しいブロックを生成
          - **軽量ノード**: 必要な部分のみダウンロード
        `
      },
      {
        title: 'ハッシュ関数とセキュリティ',
        content: `
          **ハッシュ関数の重要性**
          
          **SHA-256の特徴：**
          - 入力データから固定長(256ビット)の出力
          - 同じ入力は常に同じ出力
          - わずかな入力変化で出力が大きく変化
          - 出力から入力を逆算することは実質不可能
          
          **実際のハッシュ例：**
          - 入力: "Hello" -> 出力: 2cf24dba4f21d4288094c...
          - 入力: "Hello!" -> 出力: 334d016f755cd6dc58c53...
          
          **セキュリティへの応用：**
          - ブロック間の連結による改ざん防止
          - 取引の整合性検証
          - マイニングの計算証明
          - デジタル署名による認証
        `
      },
      {
        title: 'コンセンサスメカニズム',
        content: `
          **なぜコンセンサスが必要か**
          
          分散型システムでは、ネットワーク参加者全員が同じ状態に合意する必要があります。
          
          **Proof of Work (PoW):**
          - 計算問題を最初に解いたマイナーが新ブロック生成権を獲得
          - エネルギー消費により攻撃コストを高める
          - ビットコインで採用
          
          **メリット：**
          - 実証済みのセキュリティ
          - 真の分散化
          - 検閲耐性
          
          **デメリット：**
          - 高い電力消費
          - スケーラビリティの制限
          - トランザクション処理速度が遅い
          
          **その他のコンセンサス：**
          - **Proof of Stake (PoS)**: 保有量に基づく(イーサリアム2.0)
          - **Delegated PoS**: 代表者による効率的処理
          - **Proof of Authority**: 許可制ネットワーク
        `
      }
    ],
    keyPoints: [
      'ブロックチェーンは暗号技術で連結されたブロックの連鎖',
      '分散型ネットワークにより単一障害点を排除',
      'ハッシュ関数により改ざんを検知·防止',
      'コンセンサスメカニズムで全参加者が合意形成',
      '透明性と不変性を技術的に保証',
      '中間者なしでの信頼できる価値移転を実現'
    ],
    summary: 'ブロックチェーンは、ハッシュ関数と分散型ネットワークを活用した革新的な台帳技術です。コンセンサスメカニズムにより、中央管理者なしで全参加者が同じ状態に合意し、改ざん不可能で透明性の高いシステムを実現しています。',
    practicalExamples: [
      'ビットコイン: 約10分間隔で新ブロック生成、700KB程度のサイズ',
      'イーサリアム: 約15秒間隔、スマートコントラクト実行可能',
      '銀行間送金: 従来2-5営業日 -> ブロックチェーンで数分〜数時間',
      'サプライチェーン: 商品の製造から消費者まで完全追跡可能'
    ],
    warningNotes: [
      'ブロックチェーンデータは削除·修正が基本的に不可能',
      'プライベートキーを失うと資産に永久アクセス不可',
      '51%攻撃により理論上は改ざん可能(実際は経済的に困難)',
      'スケーラビリティ問題により処理速度に制限',
      'エネルギー消費が大きい(特にPoW系)'
    ]
  },
  quiz: [
    {
      id: 'crypto-basics-3-q1',
      question: 'ブロックチェーンでブロック同士を連結するために使用されるのは？',
      options: [
        'パスワード',
        'ハッシュ値',
        'IPアドレス',
        'ユーザー名'
      ],
      correctAnswer: 1,
      explanation: 'ブロックチェーンでは各ブロックのハッシュ値を使用してブロック同士を暗号学的に連結し、改ざんを防いでいます。'
    },
    {
      id: 'crypto-basics-3-q2',
      question: '分散型ネットワークの最大の利点は？',
      options: [
        '処理速度が速い',
        '単一障害点がない',
        'コストが安い',
        '操作が簡単'
      ],
      correctAnswer: 1,
      explanation: '分散型ネットワークでは複数のノードが同じデータを保持するため、一部のノードが故障してもシステム全体が継続して動作します。'
    },
    {
      id: 'crypto-basics-3-q3',
      question: 'SHA-256ハッシュ関数の特徴として正しいのは？',
      options: [
        '出力から入力を簡単に逆算できる',
        '同じ入力から異なる出力が生成される',
        'わずかな入力変化で出力が大きく変化',
        '出力の長さは入力に依存する'
      ],
      correctAnswer: 2,
      explanation: 'SHA-256では、入力データにわずかな変更があっても出力ハッシュが大きく変化するため、改ざんの検知が容易になります。'
    },
    {
      id: 'crypto-basics-3-q4',
      question: 'Proof of Work (PoW) の主な目的は？',
      options: [
        '取引速度を向上させる',
        '攻撃コストを高めてセキュリティを確保',
        'エネルギー消費を削減',
        'ユーザビリティを向上'
      ],
      correctAnswer: 1,
      explanation: 'PoWは計算資源を消費させることで攻撃に必要なコストを高め、ネットワークのセキュリティを経済的インセンティブで保護しています。'
    }
  ],
  lastUpdated: '2024-12-09',
  factChecked: true
};