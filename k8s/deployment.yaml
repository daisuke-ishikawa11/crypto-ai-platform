apiVersion: apps/v1
kind: Deployment
metadata:
  name: crypto-ai-production
  namespace: crypto-ai-production
  labels:
    app: crypto-ai-platform
    environment: production
    version: v1
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: crypto-ai-platform
      environment: production
  template:
    metadata:
      labels:
        app: crypto-ai-platform
        environment: production
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/api/metrics"
    spec:
      serviceAccountName: crypto-ai-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
      - name: crypto-ai-app
        image: ghcr.io/crypto-ai-platform/defi-app:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: crypto-ai-config
              key: NODE_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: crypto-ai-config
              key: PORT
        - name: HOSTNAME
          valueFrom:
            configMapKeyRef:
              name: crypto-ai-config
              key: HOSTNAME
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: crypto-ai-config
              key: REDIS_URL
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: crypto-ai-secrets
              key: DATABASE_URL
        - name: NEXT_PUBLIC_SUPABASE_URL
          valueFrom:
            secretKeyRef:
              name: crypto-ai-secrets
              key: NEXT_PUBLIC_SUPABASE_URL
        - name: NEXT_PUBLIC_SUPABASE_ANON_KEY
          valueFrom:
            secretKeyRef:
              name: crypto-ai-secrets
              key: NEXT_PUBLIC_SUPABASE_ANON_KEY
        - name: SUPABASE_SERVICE_ROLE_KEY
          valueFrom:
            secretKeyRef:
              name: crypto-ai-secrets
              key: SUPABASE_SERVICE_ROLE_KEY
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: crypto-ai-secrets
              key: OPENAI_API_KEY
        - name: ANTHROPIC_API_KEY
          valueFrom:
            secretKeyRef:
              name: crypto-ai-secrets
              key: ANTHROPIC_API_KEY
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: crypto-ai-secrets
              key: JWT_SECRET
        - name: NEXT_PUBLIC_SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: crypto-ai-secrets
              key: NEXT_PUBLIC_SENTRY_DSN
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 30
        volumeMounts:
        - name: logs-volume
          mountPath: /app/logs
        - name: cache-volume
          mountPath: /app/.next/cache
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1001
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: logs-volume
        emptyDir: {}
      - name: cache-volume
        emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - crypto-ai-platform
              topologyKey: kubernetes.io/hostname
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app: crypto-ai-platform
            environment: production

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: crypto-ai-staging
  namespace: crypto-ai-staging
  labels:
    app: crypto-ai-platform
    environment: staging
    version: v1
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: crypto-ai-platform
      environment: staging
  template:
    metadata:
      labels:
        app: crypto-ai-platform
        environment: staging
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/api/metrics"
    spec:
      serviceAccountName: crypto-ai-service-account-staging
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
      - name: crypto-ai-app
        image: ghcr.io/crypto-ai-platform/defi-app:develop
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        envFrom:
        - configMapRef:
            name: crypto-ai-config-staging
        - secretRef:
            name: crypto-ai-secrets-staging
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "250m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 30
        volumeMounts:
        - name: logs-volume
          mountPath: /app/logs
        - name: cache-volume
          mountPath: /app/.next/cache
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1001
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: logs-volume
        emptyDir: {}
      - name: cache-volume
        emptyDir: {}