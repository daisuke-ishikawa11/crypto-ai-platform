apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: crypto-ai-network-policy
  namespace: crypto-ai-production
  labels:
    app: crypto-ai-platform
    environment: production
spec:
  podSelector:
    matchLabels:
      app: crypto-ai-platform
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 3000
  - from:
    - namespaceSelector:
        matchLabels:
          name: crypto-ai-monitoring
    ports:
    - protocol: TCP
      port: 3000
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  # Allow HTTPS outbound for API calls
  - to: []
    ports:
    - protocol: TCP
      port: 443
  # Allow HTTP outbound for health checks
  - to: []
    ports:
    - protocol: TCP
      port: 80
  # Allow Redis access
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379
  # Allow database access (if in cluster)
  - to:
    - podSelector:
        matchLabels:
          app: postgres
    ports:
    - protocol: TCP
      port: 5432

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: crypto-ai-network-policy-staging
  namespace: crypto-ai-staging
  labels:
    app: crypto-ai-platform
    environment: staging
spec:
  podSelector:
    matchLabels:
      app: crypto-ai-platform
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 3000
  - from:
    - namespaceSelector:
        matchLabels:
          name: crypto-ai-monitoring
    ports:
    - protocol: TCP
      port: 3000
  egress:
  # Allow all outbound for staging (more permissive)
  - to: []

---
# Redis Network Policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: redis-network-policy
  namespace: crypto-ai-production
spec:
  podSelector:
    matchLabels:
      app: redis
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: crypto-ai-platform
    ports:
    - protocol: TCP
      port: 6379

---
# Default deny all policy for enhanced security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-all
  namespace: crypto-ai-production
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress