"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_src_data_lessons_trading-basics_lesson-34_ts"],{

/***/ "(app-pages-browser)/./src/data/lessons/trading-basics/lesson-34.ts":
/*!******************************************************!*\
  !*** ./src/data/lessons/trading-basics/lesson-34.ts ***!
  \******************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   lesson34: () => (/* binding */ lesson34)\n/* harmony export */ });\nconst lesson34 = {\n    id: 'lesson-34',\n    categoryId: 'trading-basics',\n    title: 'MEV（Maximal Extractable Value）と取引順序',\n    slug: 'mev-transaction-ordering',\n    description: 'MEVの仕組みとフロントランニング、サンドイッチ攻撃などの高度な戦略を理解し、これらを防御または活用する方法を学びます。',\n    difficultyLevel: 'advanced',\n    estimatedMinutes: 50,\n    orderIndex: 34,\n    isPublished: true,\n    tags: [\n        '基礎知識',\n        '実践',\n        'リスク管理'\n    ],\n    content: {\n        sections: [\n            {\n                type: 'text',\n                title: 'レッスン概要',\n                content: \"このレッスンではMEV（Maximal Extractable Value）と取引順序について学習します。\\n\\n## 学習目標\\n- MEV（Maximal Extractable Value）と取引順序の基本概念を理解する\\n- 実践的な活用方法を学ぶ\\n- リスクと注意点を把握する\\n\\n## 重要なポイント\\n- 基本的な知識から応用まで段階的に学習\\n- 実例を通じた理解の深化\\n- 適切なリスク管理の重要性\"\n            },\n            {\n                type: 'example',\n                title: '実践例',\n                content: \"## 基本的な例\\n実際のMEV（Maximal Extractable Value）と取引順序の活用例：\\n\\n1. **ステップ1**: 基本設定の確認\\n2. **ステップ2**: 実行手順の理解\\n3. **ステップ3**: 結果の分析\\n\\n## 応用例\\n\\nより高度な活用方法：\\n- 複合的な戦略の組み合わせ\\n- リスク管理の徹底\\n- 継続的な改善\"\n            },\n            {\n                type: 'quiz',\n                title: '理解度チェック',\n                questions: [\n                    {\n                        id: 'q1',\n                        questionType: 'multiple_choice',\n                        question: 'MEV（Maximal Extractable Value）と取引順序の基本的な特徴は？',\n                        options: [\n                            '複雑で理解が困難',\n                            '基本概念を理解すれば実用的',\n                            '専門家のみが使用可能',\n                            'リスクが高すぎる'\n                        ],\n                        correctAnswer: '基本概念を理解すれば実用的',\n                        explanation: 'MEV（Maximal Extractable Value）と取引順序は基本概念を理解することで、実践的に活用できる重要な技術です。'\n                    }\n                ]\n            },\n            {\n                type: 'warning',\n                title: '注意点とリスク',\n                content: \"**重要な注意事項**\\n\\n⚠️ **リスク管理**\\n- MEV（Maximal Extractable Value）と取引順序には固有のリスクが存在\\n- 適切な知識なしに実行しない\\n- 常に最新情報を確認\\n\\n⚠️ **実践前の確認**\\n- 十分な理解の確保\\n- 小額での練習\\n- 専門家への相談検討\\n\\n⚠️ **継続的な学習**\\n- 技術の進歩に対応\\n- 市場状況の変化に注意\\n- 定期的な知識のアップデート\"\n            }\n        ],\n        keyPoints: [\n            'MEV（Maximal Extractable Value）と取引順序の基本概念の理解',\n            '実践的な活用方法の習得',\n            'リスク管理の重要性',\n            '継続的な学習の必要性'\n        ],\n        summary: 'このレッスンではMEV（Maximal Extractable Value）と取引順序について学習しました。基本概念から実践的な活用方法まで、体系的に理解することが重要です。'\n    },\n    quiz: [\n        {\n            id: 'trading-basics-34-q1',\n            question: 'このレッスンの主要なポイントは何ですか？',\n            options: [\n                'オプション1',\n                'オプション2',\n                'オプション3',\n                'オプション4'\n            ],\n            correctAnswer: 1,\n            explanation: '詳細な説明がここに入ります。'\n        }\n    ],\n    lastUpdated: '2024-12-09',\n    factChecked: true\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9kYXRhL2xlc3NvbnMvdHJhZGluZy1iYXNpY3MvbGVzc29uLTM0LnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFFTyxNQUFNQSxXQUFtQjtJQUM5QkMsSUFBSTtJQUNKQyxZQUFZO0lBQ1pDLE9BQU87SUFDUEMsTUFBTTtJQUNOQyxhQUFhO0lBQ2JDLGlCQUFpQjtJQUNqQkMsa0JBQWtCO0lBQ2xCQyxZQUFZO0lBQ1pDLGFBQWE7SUFDYkMsTUFBTTtRQUFDO1FBQVE7UUFBTTtLQUFRO0lBRTdCQyxTQUFTO1FBQ1BDLFVBQVU7WUFDUjtnQkFDRUMsTUFBTTtnQkFDTlYsT0FBTztnQkFDUFEsU0FBVTtZQVdaO1lBQ0E7Z0JBQ0VFLE1BQU07Z0JBQ05WLE9BQU87Z0JBQ1BRLFNBQVU7WUFhWjtZQUNBO2dCQUNFRSxNQUFNO2dCQUNOVixPQUFPO2dCQUNQVyxXQUFXO29CQUNUO3dCQUNFYixJQUFJO3dCQUNKYyxjQUFjO3dCQUNkQyxVQUFVO3dCQUNWQyxTQUFTOzRCQUNQOzRCQUNBOzRCQUNBOzRCQUNBO3lCQUNEO3dCQUNEQyxlQUFlO3dCQUNmQyxhQUFhO29CQUNmO2lCQUNIO1lBQ0g7WUFDRTtnQkFDRU4sTUFBTTtnQkFDTlYsT0FBTztnQkFDUFEsU0FBVTtZQWdCWjtTQUNDO1FBQ0hTLFdBQVc7WUFDVDtZQUNBO1lBQ0E7WUFDQTtTQUNEO1FBQ0RDLFNBQVM7SUFDWDtJQUVBQyxNQUFNO1FBQ0o7WUFDRXJCLElBQUk7WUFDSmUsVUFBVTtZQUNWQyxTQUFTO2dCQUNQO2dCQUNBO2dCQUNBO2dCQUNBO2FBQ0Q7WUFDREMsZUFBZTtZQUNmQyxhQUFhO1FBQ2Y7S0FDRDtJQUNESSxhQUFhO0lBQ2JDLGFBQWE7QUFFZixFQUFFIiwic291cmNlcyI6WyIvbW50L2QvY3J5cHRvLWFpLXBsYXRmb3JtL2FwcHMvY3J5cHRvbGVhcm4tcHJvL3NyYy9kYXRhL2xlc3NvbnMvdHJhZGluZy1iYXNpY3MvbGVzc29uLTM0LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgTGVzc29uIH0gZnJvbSAnLi4vLi4vLi4vdHlwZXMnO1xuXG5leHBvcnQgY29uc3QgbGVzc29uMzQ6IExlc3NvbiA9IHtcbiAgaWQ6ICdsZXNzb24tMzQnLFxuICBjYXRlZ29yeUlkOiAndHJhZGluZy1iYXNpY3MnLFxuICB0aXRsZTogJ01FVu+8iE1heGltYWwgRXh0cmFjdGFibGUgVmFsdWXvvInjgajlj5blvJXpoIbluo8nLFxuICBzbHVnOiAnbWV2LXRyYW5zYWN0aW9uLW9yZGVyaW5nJyxcbiAgZGVzY3JpcHRpb246ICdNRVbjga7ku5XntYTjgb/jgajjg5Xjg63jg7Pjg4jjg6njg7Pjg4vjg7PjgrDjgIHjgrXjg7Pjg4njgqTjg4Pjg4HmlLvmkoPjgarjganjga7pq5jluqbjgarmiKbnlaXjgpLnkIbop6PjgZfjgIHjgZPjgozjgonjgpLpmLLlvqHjgb7jgZ/jga/mtLvnlKjjgZnjgovmlrnms5XjgpLlrabjgbPjgb7jgZnjgIInLFxuICBkaWZmaWN1bHR5TGV2ZWw6ICdhZHZhbmNlZCcsXG4gIGVzdGltYXRlZE1pbnV0ZXM6IDUwLFxuICBvcmRlckluZGV4OiAzNCxcbiAgaXNQdWJsaXNoZWQ6IHRydWUsXG4gIHRhZ3M6IFsn5Z+656SO55+l6K2YJywgJ+Wun+i3tScsICfjg6rjgrnjgq/nrqHnkIYnXSxcbiAgXG4gIGNvbnRlbnQ6IHtcbiAgICBzZWN0aW9uczogW1xuICAgICAge1xuICAgICAgICB0eXBlOiAndGV4dCcsXG4gICAgICAgIHRpdGxlOiAn44Os44OD44K544Oz5qaC6KaBJyxcbiAgICAgICAgY29udGVudDogYOOBk+OBruODrOODg+OCueODs+OBp+OBr01FVu+8iE1heGltYWwgRXh0cmFjdGFibGUgVmFsdWXvvInjgajlj5blvJXpoIbluo/jgavjgaTjgYTjgablrabnv5LjgZfjgb7jgZnjgIJcblxuIyMg5a2m57+S55uu5qiZXG4tIE1FVu+8iE1heGltYWwgRXh0cmFjdGFibGUgVmFsdWXvvInjgajlj5blvJXpoIbluo/jga7ln7rmnKzmpoLlv7XjgpLnkIbop6PjgZnjgotcbi0g5a6f6Le155qE44Gq5rS755So5pa55rOV44KS5a2m44G2XG4tIOODquOCueOCr+OBqOazqOaEj+eCueOCkuaKiuaPoeOBmeOCi1xuXG4jIyDph43opoHjgarjg53jgqTjg7Pjg4hcbi0g5Z+65pys55qE44Gq55+l6K2Y44GL44KJ5b+c55So44G+44Gn5q616ZqO55qE44Gr5a2m57+SXG4tIOWun+S+i+OCkumAmuOBmOOBn+eQhuino+OBrua3seWMllxuLSDpganliIfjgarjg6rjgrnjgq/nrqHnkIbjga7ph43opoHmgKdgXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICB0eXBlOiAnZXhhbXBsZScsXG4gICAgICAgIHRpdGxlOiAn5a6f6Le15L6LJyxcbiAgICAgICAgY29udGVudDogYCMjIOWfuuacrOeahOOBquS+i1xu5a6f6Zqb44GuTUVW77yITWF4aW1hbCBFeHRyYWN0YWJsZSBWYWx1Ze+8ieOBqOWPluW8lemghuW6j+OBrua0u+eUqOS+i++8mlxuXG4xLiAqKuOCueODhuODg+ODlzEqKjog5Z+65pys6Kit5a6a44Gu56K66KqNXG4yLiAqKuOCueODhuODg+ODlzIqKjog5a6f6KGM5omL6aCG44Gu55CG6KejXG4zLiAqKuOCueODhuODg+ODlzMqKjog57WQ5p6c44Gu5YiG5p6QXG5cbiMjIOW/nOeUqOS+i1xuXG7jgojjgorpq5jluqbjgarmtLvnlKjmlrnms5XvvJpcbi0g6KSH5ZCI55qE44Gq5oim55Wl44Gu57WE44G/5ZCI44KP44GbXG4tIOODquOCueOCr+euoeeQhuOBruW+ueW6lVxuLSDntpnntprnmoTjgarmlLnlloRgXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICB0eXBlOiAncXVpeicsXG4gICAgICAgIHRpdGxlOiAn55CG6Kej5bqm44OB44Kn44OD44KvJyxcbiAgICAgICAgcXVlc3Rpb25zOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgaWQ6ICdxMScsXG4gICAgICAgICAgICBxdWVzdGlvblR5cGU6ICdtdWx0aXBsZV9jaG9pY2UnLFxuICAgICAgICAgICAgcXVlc3Rpb246ICdNRVbvvIhNYXhpbWFsIEV4dHJhY3RhYmxlIFZhbHVl77yJ44Go5Y+W5byV6aCG5bqP44Gu5Z+65pys55qE44Gq54m55b6044Gv77yfJyxcbiAgICAgICAgICAgIG9wdGlvbnM6IFtcbiAgICAgICAgICAgICAgJ+ikh+mbkeOBp+eQhuino+OBjOWbsOmboycsXG4gICAgICAgICAgICAgICfln7rmnKzmpoLlv7XjgpLnkIbop6PjgZnjgozjgbDlrp/nlKjnmoQnLFxuICAgICAgICAgICAgICAn5bCC6ZaA5a6244Gu44G/44GM5L2/55So5Y+v6IO9JyxcbiAgICAgICAgICAgICAgJ+ODquOCueOCr+OBjOmrmOOBmeOBjuOCiydcbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBjb3JyZWN0QW5zd2VyOiAn5Z+65pys5qaC5b+144KS55CG6Kej44GZ44KM44Gw5a6f55So55qEJyxcbiAgICAgICAgICAgIGV4cGxhbmF0aW9uOiAnTUVW77yITWF4aW1hbCBFeHRyYWN0YWJsZSBWYWx1Ze+8ieOBqOWPluW8lemghuW6j+OBr+WfuuacrOamguW/teOCkueQhuino+OBmeOCi+OBk+OBqOOBp+OAgeWun+i3teeahOOBq+a0u+eUqOOBp+OBjeOCi+mHjeimgeOBquaKgOihk+OBp+OBmeOAgidcbiAgICAgICAgICB9XG4gICAgICBdXG4gICAgfSxcbiAgICAgIHtcbiAgICAgICAgdHlwZTogJ3dhcm5pbmcnLFxuICAgICAgICB0aXRsZTogJ+azqOaEj+eCueOBqOODquOCueOCrycsXG4gICAgICAgIGNvbnRlbnQ6IGAqKumHjeimgeOBquazqOaEj+S6i+mghSoqXG5cbuKaoO+4jyAqKuODquOCueOCr+euoeeQhioqXG4tIE1FVu+8iE1heGltYWwgRXh0cmFjdGFibGUgVmFsdWXvvInjgajlj5blvJXpoIbluo/jgavjga/lm7rmnInjga7jg6rjgrnjgq/jgYzlrZjlnKhcbi0g6YGp5YiH44Gq55+l6K2Y44Gq44GX44Gr5a6f6KGM44GX44Gq44GEXG4tIOW4uOOBq+acgOaWsOaDheWgseOCkueiuuiqjVxuXG7imqDvuI8gKirlrp/ot7XliY3jga7norroqo0qKlxuLSDljYHliIbjgarnkIbop6Pjga7norrkv51cbi0g5bCP6aGN44Gn44Gu57e057+SXG4tIOWwgumWgOWutuOBuOOBruebuOirh+aknOiojlxuXG7imqDvuI8gKirntpnntprnmoTjgarlrabnv5IqKlxuLSDmioDooZPjga7pgLLmranjgavlr77lv5xcbi0g5biC5aC054q25rOB44Gu5aSJ5YyW44Gr5rOo5oSPXG4tIOWumuacn+eahOOBquefpeitmOOBruOCouODg+ODl+ODh+ODvOODiGBcbiAgICAgIH1cbiAgICAgIF0sXG4gICAga2V5UG9pbnRzOiBbXG4gICAgICAnTUVW77yITWF4aW1hbCBFeHRyYWN0YWJsZSBWYWx1Ze+8ieOBqOWPluW8lemghuW6j+OBruWfuuacrOamguW/teOBrueQhuinoycsXG4gICAgICAn5a6f6Le155qE44Gq5rS755So5pa55rOV44Gu57+S5b6XJyxcbiAgICAgICfjg6rjgrnjgq/nrqHnkIbjga7ph43opoHmgKcnLFxuICAgICAgJ+e2mee2mueahOOBquWtpue/kuOBruW/heimgeaApydcbiAgICBdLFxuICAgIHN1bW1hcnk6ICfjgZPjga7jg6zjg4Pjgrnjg7Pjgafjga9NRVbvvIhNYXhpbWFsIEV4dHJhY3RhYmxlIFZhbHVl77yJ44Go5Y+W5byV6aCG5bqP44Gr44Gk44GE44Gm5a2m57+S44GX44G+44GX44Gf44CC5Z+65pys5qaC5b+144GL44KJ5a6f6Le155qE44Gq5rS755So5pa55rOV44G+44Gn44CB5L2T57O755qE44Gr55CG6Kej44GZ44KL44GT44Go44GM6YeN6KaB44Gn44GZ44CCJyxcbiAgfSxcblxuICBxdWl6OiBbXG4gICAge1xuICAgICAgaWQ6ICd0cmFkaW5nLWJhc2ljcy0zNC1xMScsXG4gICAgICBxdWVzdGlvbjogJ+OBk+OBruODrOODg+OCueODs+OBruS4u+imgeOBquODneOCpOODs+ODiOOBr+S9leOBp+OBmeOBi++8nycsXG4gICAgICBvcHRpb25zOiBbXG4gICAgICAgICfjgqrjg5fjgrfjg6fjg7MxJyxcbiAgICAgICAgJ+OCquODl+OCt+ODp+ODszInLCBcbiAgICAgICAgJ+OCquODl+OCt+ODp+ODszMnLFxuICAgICAgICAn44Kq44OX44K344On44OzNCdcbiAgICAgIF0sXG4gICAgICBjb3JyZWN0QW5zd2VyOiAxLFxuICAgICAgZXhwbGFuYXRpb246ICfoqbPntLDjgaroqqzmmI7jgYzjgZPjgZPjgavlhaXjgorjgb7jgZnjgIInXG4gICAgfVxuICBdLFxuICBsYXN0VXBkYXRlZDogJzIwMjQtMTItMDknLFxuICBmYWN0Q2hlY2tlZDogdHJ1ZVxuXG59OyJdLCJuYW1lcyI6WyJsZXNzb24zNCIsImlkIiwiY2F0ZWdvcnlJZCIsInRpdGxlIiwic2x1ZyIsImRlc2NyaXB0aW9uIiwiZGlmZmljdWx0eUxldmVsIiwiZXN0aW1hdGVkTWludXRlcyIsIm9yZGVySW5kZXgiLCJpc1B1Ymxpc2hlZCIsInRhZ3MiLCJjb250ZW50Iiwic2VjdGlvbnMiLCJ0eXBlIiwicXVlc3Rpb25zIiwicXVlc3Rpb25UeXBlIiwicXVlc3Rpb24iLCJvcHRpb25zIiwiY29ycmVjdEFuc3dlciIsImV4cGxhbmF0aW9uIiwia2V5UG9pbnRzIiwic3VtbWFyeSIsInF1aXoiLCJsYXN0VXBkYXRlZCIsImZhY3RDaGVja2VkIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/data/lessons/trading-basics/lesson-34.ts\n"));

/***/ })

}]);